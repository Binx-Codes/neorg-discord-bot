[tool.poetry]
name = "NeorgBot"
version = "1.1.0"
description = "A Discord bot for Neorg Discord Server"
authors = []
license = "GNU General Public License v3.0"
readme = "README.md"
homepage = "https://github.com/TheChoudo/NeorgBot"
keywords = ["discord", "discord-bot", "bot"]
classifiers = [
    "Topic :: Utilities",
]
include = ["CHANGELOG.md", "LICENSE", "README.md"]

[tool.poetry.dependencies]
python = "3.10"
Flask = "^2.1.1"
rich = "^12.2.0"
requests = "^2.27.1"
beautifulsoup4 = "^4.10.0"
icecream = "^2.1.2"
rapidfuzz = "^2.0.7"
python-dotenv = "^0.20.0"
pyinspect = "^0.1.0"
"discord.py" = "^1.7.3"


[tool.poetry.dev-dependencies]
interrogate = "^1.5.0"
pynguin = "^0.19.0"
isort = "^5.10.1"
yapf = "^0.32.0"
vulture = "^2.3"
coverage = "^6.3.2"
flake8 = "^4.0.1"
flake8-annotations = "^2.8.0"
flake8-bugbear = "^22.3.23"
flake8-string-format = "^0.3.0"
flake8-isort = "^4.1.1"
pep8-naming = "^0.12.1"
pytest = "^7.1.1"
pytest-cov = "^3.0.0"
pytest-xdist = { version = "~=2.3.0", extras = ["psutil"] }
taskipy = "~=1.7.0"
sentry-sdk = "^1.5.8"

[tool.taskipy.tasks]
start = "python -m bot"
lint = "pre-commit run --all-files"
precommit = "pre-commit install"
# build = "docker build -t ghcr.io/python-discord/bot:latest -f Dockerfile ."
# push = "docker push ghcr.io/python-discord/bot:latest"
test-nocov = "pytest -n auto"
test = "pytest -n auto --cov-report= --cov --ff"
retest = "pytest -n auto --cov-report= --cov --lf"
html = "coverage html"
report = "coverage report"
isort = "isort ."

[tool.yapf]
align_closing_bracket_with_visual_indent = "False"
allow_multiline_dictionary_keys = "True"
allow_multiline_lambdas = "False"
allow_split_before_default_or_named_assigns="False"
allow_split_before_dict_value="False"
arithmetic_precedence_indication="True"
blank_lines_around_top_level_definition="1"
blank_lines_between_top_level_imports_and_variables="1"
blank_line_before_class_docstring="False"
blank_line_before_module_docstring="False"
blank_line_before_nested_class_or_def="True"
coalesce_brackets="True"
column_limit="90"
continuation_align_style="SPACE"
continuation_indent_width="4"
dedent_closing_brackets="False"
disable_ending_comma_heuristic="True"
each_dict_entry_on_separate_line="True"
force_multiline_dict="True"
i18n_comment="#\\..*"
i18n_function_call="N_, _"
indent_closing_brackets="False"
indent_dictionary_value="True"
indent_width="4"
join_multiple_lines="True"
no_spaces_around_selected_binary_operators="False"
spaces_around_default_or_named_assign="False"
spaces_around_dict_delimiters="False"
spaces_around_list_delimiters="False"
spaces_around_power_operator="False"
spaces_around_subscript_colon="False"
spaces_around_tuple_delimiters="False"
spaces_before_comment="2"
space_between_ending_comma_and_closing_bracket="False"
space_inside_brackets="False"
split_all_comma_separated_values="False"
split_arguments_when_comma_terminated="True"
split_before_bitwise_operator="True"
split_before_closing_bracket="True"
split_before_dict_set_generator="True"
split_before_dot="True"
split_before_expression_after_opening_paren="True"
split_before_first_argument="True"
split_before_logical_operator="True"
split_before_named_assigns="True"
split_complex_comprehension="True"
split_penalty_after_opening_bracket="300"
split_penalty_after_unary_operator="10000"
split_penalty_arithmetic_operator="300"
split_penalty_before_if_expr="0"
split_penalty_bitwise_operator="300"
split_penalty_comprehension="2100"
split_penalty_excess_character="7000"
split_penalty_for_added_line_split="30"
split_penalty_import_names="0"
split_penalty_logical_operator="300"
use_tabs="False"

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = true
fail-under = 90
exclude = ["setup.py", "docs", "build", "tests",  "_version.py", "versioneer.py"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*", "^fit$", "^transform$"]
verbose = 1
quiet = false
whitelist-regex = []
color = true

[tool.vulture]
exclude = ["cogs/"]
ignore_decorators = ["@app.route", "@require_*", "@client.*"]
make_whitelist = true
min_confidence = 95
sort_by_size = true


[tool.coverage.run]
branch = true
source_pkgs = ["bot"]
source = ["tests"]

[tool.isort]
multi_line_output = 6
order_by_type = false
case_sensitive = true
combine_as_imports = true
line_length = 120
atomic = true

[tool.tox]
legacy_tox_ini = """
[tox]
minversion = 3.9.0
envlist = py39, py310, pylint
isolated_build = true
[gh-actions]
python =
    3.9: py39
    3.10: py310
[testenv]
setenv =
    PYTHONPATH = {toxinidir}
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements_dev.txt
extras = test
commands =
    pytest --basetemp={envtmpdir} --no-cov
"""
